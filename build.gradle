plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.3.4"
    id("com.google.cloud.tools.jib") version "2.6.0"
}

version = "0.1"
group = "net.opslive.services"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("net.opslive.services.*")
    }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.dekorate:kubernetes-annotations:${dekorateVersion}")
    annotationProcessor("io.dekorate:jaeger-annotations:${dekorateVersion}")
    annotationProcessor("io.dekorate:halkyon-annotations:${dekorateVersion}")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.swagger.core.v3:swagger-annotations")
    compileOnly("org.projectlombok:lombok")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.micronaut:micronaut-tracing")
    runtimeOnly("io.jaegertracing:jaeger-thrift")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.dekorate:kubernetes-annotations:${dekorateVersion}")
    implementation("io.dekorate:jaeger-annotations:${dekorateVersion}")
    implementation("io.dekorate:halkyon-annotations:${dekorateVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
}


application {
    mainClass.set("net.opslive.services.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}



jib {
    to {
        image = "gcr.io/myapp/jib-image"
    }
}
